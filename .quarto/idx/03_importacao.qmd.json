{"title":"Importando dados","markdown":{"yaml":{"title":"Importando dados","code-annotations":"hover"},"headingText":"Dúvida","containsRefs":false,"markdown":"\n\n::: callout\nConceitos prévios importantes:\n\n- [Funções e Pacotes no R](01_r_rstudio.qmd)\n\n- [Objetos no R](02_conceitos_basicos_r.qmd)\n\n- [Projetos do RStudio (`.Rproj`) e diretórios de trabalho](01_1_rproj.qmd)\n\n- [Caminhos de arquivos](01_1_rproj.qmd)\n:::\n\nO objetivo da etapa de importação é carregar a base de dados para a memória RAM do computador. Assim conseguiremos utilizar os dados no R.\n\nEssa etapa pode ser bem rápida (ou não!). Depende da base de dados que precisamos carregar.\n\nNesta etapa, vamos aprender:\n\n-   Como importar dados de arquivos locais (arquivos que estão salvos no nosso computador) para dentro do R;\n\n-   Como exportar dados do R dados (salvar objetos do R em arquivos que ficarão salvos no nosso computador);\n\n-   Como importar dados usando pacotes de dados, como o `{sidrar}`.\n\nAo final, teremos também uma lista com sugestão de materiais extras, caso queira aprofundar mais sobre o assunto.\n\n::: callout-important\nAtenção: Nessa aula o conceito de caminho relativo será muito importante. Caso esteja com dúvidas sobre o tema, [revise a aula sobre \"Diretório de trabalho e Projetos\"](01_1_rproj.qmd).\n:::\n\nNesta aula, utilizaremos alguns arquivos baixados na aula [Diretórios de trabalho e projetos > Preparando o projeto para o curso](01_1_rproj.qmd#preparando-o-projeto-para-o-curso).\n\n\n::: callout-tip\n**Como verificar se a importação deu certo?**\n\nPara verificar se a importação deu certo, você pode verificar se o nome do objeto aparece no Painel *Environment* do RStudio, ou também tentar interagir com o objeto, como por exemplo usar a função `head(nome_objeto)` para retornar as primeiras linhas da tabela importada.\n\n:::\n\n## Importando dados de um arquivo local\n\nPara importar dados de um arquivo local, você pode usar funções com o prefixo `read_` de pacotes como `{readr}` e `{readxl}`.\n\n### Arquivos de texto (ex: `.csv`)\n\nO pacote `{readr}` permite a leitura de arquivos de texto separados por algum delimitador, como `.csv`, `.tsv` e `.txt`.\n\n```{r}\nlibrary(readr)\n```\n\nPara realizar a importação de um arquivo deste tipo, é importante saber qual é o delimitador utilizado no arquivo.\n\nA sigla CSV signfica *Comma Separated Values*, ou seja, valores separados por vírgula. Por padrão, a função `read_csv()` do pacote `{readr}` importa arquivos `.csv` com delimitador `,`.\n\nNo Brasil, é comum a utilização do `;` como delimitador, e para isso podemos utilizar a função `read_csv2()`. Isso acontece pois utilizamos a vírgula como separador decimal (Ex: `4,20`) e isso pode causar problemas na importação de arquivos `.csv` com delimitador `,`.\n\nCaso o arquivo tenha outro delimitador, você pode utilizar a função `read_delim()` e especificar o delimitador com o argumento `delim`.\n\nAo importar, uma mensagem aparecerá no console apresentando algumas informações sobre a importação, como:\n\n-   número de linhas;\n\n-   número de colunas;\n\n-   delimitador utilizado;\n\n-   tipos de colunas;\n\n-   nome das colunas por tipo;\n\n-   quantidade de colunas importadas por tipo.\n\n![Captura de tela do console do RStudio, mostrando a mensagem apresentada pela função read_csv()](images/03_output_read_csv.png){fig-align=\"center\"}\n\n\n\n#### Arquivo de texto separado por vírgula (`,`)\n\n```{r}\ndados_csv <- read_csv(\"dados/sidrar_4092_bruto.csv\") # <1>\n```\n1. Importando dados de um arquivo .csv, com separador vírgula (`,`)\n\n#### Arquivo de texto separado por ponto e vírgula (`;`)\n\n```{r}\ndados_csv_2 <- read_csv2(\"dados/sidrar_4092_bruto_2.csv\") # <1>\n```\n1. Importando dados de um arquivo .csv, com separador ponto e vírgula (`;`)\n\n### Arquivos Excel (ex: `.xlsx`)\n\nO pacote `{readxl}` permite a leitura de arquivos do Excel.\n\nA função `excel_sheets()` do pacote `{readxl}` retorna o nome das planilhas (*Sheets*) disponíveis em um arquivo Excel:\n\n```{r}\nreadxl::excel_sheets(\"dados/sidrar_4092_bruto.xlsx\") # <1>\n```\n1. Consultando as planilhas disponíveis no arquivo Excel\n\nA função `read_excel()` do pacote `{readxl}` permite a leitura de uma planilha específica de um arquivo Excel, utilizando o argumento `sheet` para especificar o nome da planilha. Caso o argumento `sheet` não seja fornecido, a função importará a primeira planilha do arquivo.\n\n```{r}\ndados_excel <- readxl::read_excel(\"dados/sidrar_4092_bruto.xlsx\", sheet = \"Sheet1\") # <1> \n```\n1. Importando dados de uma planilha do Excel chamada \"Sheet1\"\n\n\n### Arquivo binário do R (`.rds`)\n\nA função `read_rds()` do pacote `{readr}` permite importar um arquivo binário do R. Um arquivo binário do R é um formato que preserva a integridade dos tipos de dados ao salvar e carregar objetos[^arquivos-binarios].\n\n[^arquivos-binarios]: O formato `.rds` não é o único formato de arquivo binário do R; outro exemplo é o `.Rdata`. Existem também formatos externos, como o `.parquet`, um formato eficiente para grandes volumes de dados e que podem ser lidos no R com o pacote `{arrow}`. Isso será abordado nos exemplos com o pacote `{censobr}`.\n\n\n```{r}\ndados <- read_rds(\"dados/sidrar_4092_bruto.rds\")\n```\n\n### Arquivos do Stata, SPSS, SAS\n\nPara importar arquivos do Stata, SPSS e SAS, podemos usar o pacote [`{haven}`](https://haven.tidyverse.org/). Esse pacote é instalado junto com o `{tidyverse}`.\n\nPor exemplo, função `read_dta()` do pacote `{haven}` permite a leitura de arquivos do Stata:\n\n```{r}\ndados_dta <- haven::read_dta(\"dados/sidrar_4092_bruto.dta\")\n```\n\n### Import Dataset do RStudio\n\nCaso você esteja com dificuldades, uma dica é usar a funcionalidade *Import Dataset* do RStudio. Essa funcionalidade permite utilizar uma interface *point-and-click* para importar dados, e apresenta o código utilizado para a importação. \n\n::: callout-tip\nO mais importante ao usar essa funcionalidade é **copiar e colar o código gerado no seu script**, para que você possa reutilizá-lo posteriormente.\n:::\n\n\nPara acessar a funcionalidade *Import Dataset*, clique em *Import Dataset* no canto superior direito do painel *Environment* do RStudio. Caso o arquivo seja um Excel, escolha a opção `From Excel`. Caso o arquivo seja um texto separado por algum delimitador (como CSV), escolha a opção `From Text (readr)`.\n\n![Captura de tela do console do RStudio, mostrando o menu onde podemos encontrar o Import Dataset](images/03_import_dataset.png){fig-align=\"center\"}\n\n## Salvando dados localmente\n\nPara salvar dados localmente, você pode usar funções com o prefixo `write_` de pacotes como `{readr}` e `{writexl}`. \nEssas funções solicitam dois argumentos principais: \n\n- Qual é o objeto que você queremos salvar? Esse objeto deve estar disponível no *Environment* do R. \n\n- Onde queremos salvar o arquivo? O caminho completo do arquivo deve ser fornecido entre aspas, contendo o diretório onde ele será salvo (em qual pasta do computador) e o nome do arquivo (com a extensão, por exemplo, `.csv`).\n\nAntes de salvar os dados, vamos criar um diretório onde salvaremos os arquivos. Você pode criar o diretório manualmente ou usar a função `fs::dir_create(\"nome_do_diretorio/\")` para criar o diretório.\n\n```{r}\n#| eval: false\nfs::dir_create(\"dados_output\")\n```\n\n::: callout-warning\nAtenção: O diretório (pasta no computador) onde o arquivo será salvo deve existir previamente, se não gerará um erro similar a este:\n\n```         \nError: Cannot open file for writing:\n* 'dados_output/sidrar_4092_salvo.csv'\n```\n:::\n\n### Arquivo de texto (ex: `.csv`)\n\nO pacote `{readr}` permite a escrita de arquivos de texto separados por algum delimitador, como `.csv`, `.tsv` e `.txt`.\n\nA função `write_csv2()` premite a escrita de arquivos `.csv` com separador `;`, que é o padrão no Brasil.\n\n```{r}\n#| eval: false\nwrite_csv2(dados, \"dados_output/sidrar_4092_bruto.csv\")\n```\n\n### Arquivo excel (ex: `.xlsx`)\n\nA função `write_xlsx()` do pacote `{writexl}` permite a escrita de arquivos do Excel.\n\n```{r}\n#| eval: false\nwritexl::write_xlsx(dados, \"dados_output/sidrar_4092_bruto.xlsx\")\n```\n\n### Arquivo binário do R (`.rds`)\n\nA função `write_rds()` do pacote `{readr}` permite salvar um objeto do R em um arquivo binário do R, preservando a estrutura dos objetos.\n\nExistem algumas vantagens em salvar arquivos no formato `.rds`:\n  - Podemos salvar qualquer tipo de objeto do R, como dataframes, listas, vetores, etc.\n\n  - Não perdemos a estrutura do objeto, como a classe, os tipos das colunas, nível de fatores, etc.\n  \n  - É um arquivo compacto (o arquivo salvo não é grande) e de rápida leitura no R (a importação não demora).\n  \n```{r}\nwrite_rds(dados, \"dados_output/sidrar_4092_bruto.rds\")\n```\n\n\n\n## Importando dados usando pacotes de dados\n\nExistem pacotes no R que permitem a importação de dados, como por exemplo: \n\n- [sidrar](https://cran.r-project.org/web/packages/sidrar/vignettes/Introduction_to_sidrar.html): Acesso aos dados disponíveis no SIDRA - Sistema IBGE de Recuperação Automática.\n- [censobr](https://ipeagit.github.io/censobr/): Dados de censos demográficos brasileiros.\n- [ipeadatar](https://cran.r-project.org/web/packages/ipeadatar/index.html): Acesso aos dados disponibilizados no [Ipeadata](http://www.ipeadata.gov.br/Default.aspx).\n- [flightsbr](https://github.com/ipeaGIT/flightsbr): Dados de vôos no Brasil.\n- [PNADcIBGE](https://cran.r-project.org/web/packages/PNADcIBGE/index.html): Dados da PNAD Contínua do IBGE.\n- [microdatasus](https://rfsaldanha.github.io/microdatasus/): Acesso aos microdados do DataSUS.\n\nA parte boa de usar esses pacotes é que eles já possuem funções prontas para importar os dados. \n\nA parte não-tão-boa é que os pacotes tem funções específicas para importar os dados, e você precisa aprender como usar essas funções. Recomendamos que você leia a documentação do pacote para entender como usar as funções de importação.\n\nAo longo deste curso, vamos aprender a usar alguns desses pacotes para importar dados específicos.\n\n::: callout-important\nEsses pacotes, em geral, obtém as informações na internet. Isso pode demorar um pouco.\n\nRecomendamos que você salve uma cópia local dos dados brutos após o download. Isso evita a necessidade de baixar os dados novamente e facilita o trabalho localmente, principalmente se a conexão com a internet estiver instável.\n\nAlguns pacotes, como o `{censobr}`, apresentam funções preparadas para salvar os dados localmente.\n:::\n\n### Pacote `{sidrar}`\n\nO pacote `{sidrar}` permite a importação de dados do Sistema IBGE de Recuperação Automática (SIDRA).\n\nPara importar dados do SIDRA, precisamos saber o **código da tabela** que desejamos importar. Uma forma de fazer isso é buscar no site do SIDRA, no IBGE: <https://sidra.ibge.gov.br/>.\n\n#### Buscando tabelas no SIDRA\n\nOutra forma é buscar por palavras-chave no próprio R, utilizando a função `search_sidra()`:\n\n```{r}\n# Exemplo de busca por palavras-chave: \n# Tabelas com resultados da PNAD Contínua Trimestral\nsidrar::search_sidra(\"PNADCT\") #<1>\n```\n1. Exemplo de busca por palavras-chave: tabelas com resultados da PNAD Contínua Trimestral\n\nNeste curso, utilizaremos na maioria das aulas a [Tabela 4092 - Pessoas de 14 anos ou mais de idade, por condição em relação à força de trabalho e condição e ocupação](https://sidra.ibge.gov.br/Tabela/4092), proveniente da Pesquisa Nacional por Amostra de Domicílios Contínua Trimestral (PNADC/T).\n\n#### Buscando informações sobre a tabela\n\nSabendo o código da tabela, você pode buscar informações sobre a tabela com a função `info_sidra()`. \n\n```{r}\ninfo_4092 <- sidrar::info_sidra(\"4092\")\n```\n\nO resultado dessa função é uma lista, portanto podemos acessar os elementos da lista utilizando o operador `$`, seguido pelo nome do elemento.\n\nPrimeiro, podemos ver os nomes dos elementos da lista:\n\n```{r}\nnames(info_4092)\n```\nAgora podemos consultar os elementos dessa lista!\n\n##### Nome da tabela\n\n```{r}\ninfo_4092$table\n```\n\n##### Períodos\n\nIsso será importante para a importação dos dados, pois podemos informar qual período queremos importar. \n\n```{r}\ninfo_4092$period\n```\nEsses dados estão salvos em um vetor de tamanho um, com textos separados por vírgula. Esse formato não é o ideal para usar na função de importação que veremos a seguir: o melhor é transformar em um vetor, onde cada elemento é um período.\n\nPodemos fazer isso com a função `str_split()`:\n\n```{r}\nperiodos_disponiveis <- stringr::str_split(info_4092$period, \", \")[[1]]\nperiodos_disponiveis\n```\n\nEsses são os períodos disponíveis para essa tabela no SIDRA.\n\n\n##### Variáveis\n\nIsso será importante para a importação dos dados, pois podemos informar quais variáveis queremos importar.\n\n```{r}\ninfo_4092$variable\n```\n\n##### Variáveis - Categorias\n\n```{r}\ninfo_4092$classific_category\n```\n\n##### Nível territorial\n\nIsso será importante para a importação dos dados, pois precisamos informar qual é o nível territorial a ser usado na importação.\n\n```{r}\ninfo_4092$geo\n```\n\n\n#### Importando a tabela\n\nA função `get_sidra()` do pacote `{sidrar}` permite importar dados do SIDRA.\n\n```{r}\n#| eval: false\ndados_brutos_4092 <- sidrar::get_sidra(\n  x = 4092,                      # <1>\n  period = c(\"201402\", \"201702\", \"202002\", \"202302\"), # <2>\n  geo = \"State\"                  # <3>\n)\n\n```\n1. Qual é o código da tabela que vamos usar?\n2. Períodos: trimestres, podemos indicar um vetor\n3. Nível territorial: Dados por UF\n\n\nLembrando que é importante salvar uma cópia local dos dados após o download. Assim, quando você for trabalhar com esses dados, não precisará baixá-los novamente.\n\n```{r}\n#| eval: false\nwrite_rds(dados_brutos_4092, \"dados_output/sidrar_4092_bruto.rds\") # <1>\n```\n1. Salvar o objeto `dados_brutos_4092` em um arquivo `.rds`, no arquivo `\"dados_output/sidrar_4092_bruto.rds\"`.\n\n## Sugestões de exercícios\n\n1. Faça a importação da base de dados `mananciais.csv`, disponível [neste link](https://github.com/beatrizmilz/mananciais/raw/master/inst/extdata/mananciais.csv). Dica: você pode utilizar a opção `Import Dataset > From Text (readr)` localizado no painel *Environment* do RStudio.\n\n2. Faça a importação da base `deputados.csv`, disponível [neste link](https://dadosabertos.camara.leg.br/arquivos/deputados/csv/deputados.csv). Dica: você pode utilizar a opção `Import Dataset > From Text (readr)` localizado no painel *Environment* do RStudio.\n\n3. Busque no [Portal de Dados Abertos da Câmara dos Deputados > Arquivos](https://dadosabertos.camara.leg.br/swagger/api.html?tab=staticfile#api) a tabela de proposições para o ano atual, e importe essa tabela no R.\n\n\n## Sugestões de materiais\n\n-   Livro [R para Ciência de Dados 2ed](https://cienciadedatos.github.io/pt-r4ds/):\n    -   [Importação de dados](https://cienciadedatos.github.io/pt-r4ds/data-import.html)\n-   Vídeo [Como organizar seu banco de dados para análises estatísticas](https://youtu.be/wzfPR2oQ61A?si=jU4YwAU_n-xQggsD), por Fernanda Peres (30 minutos).\n","srcMarkdownNoYaml":"\n\n::: callout\nConceitos prévios importantes:\n\n- [Funções e Pacotes no R](01_r_rstudio.qmd)\n\n- [Objetos no R](02_conceitos_basicos_r.qmd)\n\n- [Projetos do RStudio (`.Rproj`) e diretórios de trabalho](01_1_rproj.qmd)\n\n- [Caminhos de arquivos](01_1_rproj.qmd)\n:::\n\nO objetivo da etapa de importação é carregar a base de dados para a memória RAM do computador. Assim conseguiremos utilizar os dados no R.\n\nEssa etapa pode ser bem rápida (ou não!). Depende da base de dados que precisamos carregar.\n\nNesta etapa, vamos aprender:\n\n-   Como importar dados de arquivos locais (arquivos que estão salvos no nosso computador) para dentro do R;\n\n-   Como exportar dados do R dados (salvar objetos do R em arquivos que ficarão salvos no nosso computador);\n\n-   Como importar dados usando pacotes de dados, como o `{sidrar}`.\n\nAo final, teremos também uma lista com sugestão de materiais extras, caso queira aprofundar mais sobre o assunto.\n\n::: callout-important\nAtenção: Nessa aula o conceito de caminho relativo será muito importante. Caso esteja com dúvidas sobre o tema, [revise a aula sobre \"Diretório de trabalho e Projetos\"](01_1_rproj.qmd).\n:::\n\nNesta aula, utilizaremos alguns arquivos baixados na aula [Diretórios de trabalho e projetos > Preparando o projeto para o curso](01_1_rproj.qmd#preparando-o-projeto-para-o-curso).\n\n\n::: callout-tip\n## Dúvida\n**Como verificar se a importação deu certo?**\n\nPara verificar se a importação deu certo, você pode verificar se o nome do objeto aparece no Painel *Environment* do RStudio, ou também tentar interagir com o objeto, como por exemplo usar a função `head(nome_objeto)` para retornar as primeiras linhas da tabela importada.\n\n:::\n\n## Importando dados de um arquivo local\n\nPara importar dados de um arquivo local, você pode usar funções com o prefixo `read_` de pacotes como `{readr}` e `{readxl}`.\n\n### Arquivos de texto (ex: `.csv`)\n\nO pacote `{readr}` permite a leitura de arquivos de texto separados por algum delimitador, como `.csv`, `.tsv` e `.txt`.\n\n```{r}\nlibrary(readr)\n```\n\nPara realizar a importação de um arquivo deste tipo, é importante saber qual é o delimitador utilizado no arquivo.\n\nA sigla CSV signfica *Comma Separated Values*, ou seja, valores separados por vírgula. Por padrão, a função `read_csv()` do pacote `{readr}` importa arquivos `.csv` com delimitador `,`.\n\nNo Brasil, é comum a utilização do `;` como delimitador, e para isso podemos utilizar a função `read_csv2()`. Isso acontece pois utilizamos a vírgula como separador decimal (Ex: `4,20`) e isso pode causar problemas na importação de arquivos `.csv` com delimitador `,`.\n\nCaso o arquivo tenha outro delimitador, você pode utilizar a função `read_delim()` e especificar o delimitador com o argumento `delim`.\n\nAo importar, uma mensagem aparecerá no console apresentando algumas informações sobre a importação, como:\n\n-   número de linhas;\n\n-   número de colunas;\n\n-   delimitador utilizado;\n\n-   tipos de colunas;\n\n-   nome das colunas por tipo;\n\n-   quantidade de colunas importadas por tipo.\n\n![Captura de tela do console do RStudio, mostrando a mensagem apresentada pela função read_csv()](images/03_output_read_csv.png){fig-align=\"center\"}\n\n\n\n#### Arquivo de texto separado por vírgula (`,`)\n\n```{r}\ndados_csv <- read_csv(\"dados/sidrar_4092_bruto.csv\") # <1>\n```\n1. Importando dados de um arquivo .csv, com separador vírgula (`,`)\n\n#### Arquivo de texto separado por ponto e vírgula (`;`)\n\n```{r}\ndados_csv_2 <- read_csv2(\"dados/sidrar_4092_bruto_2.csv\") # <1>\n```\n1. Importando dados de um arquivo .csv, com separador ponto e vírgula (`;`)\n\n### Arquivos Excel (ex: `.xlsx`)\n\nO pacote `{readxl}` permite a leitura de arquivos do Excel.\n\nA função `excel_sheets()` do pacote `{readxl}` retorna o nome das planilhas (*Sheets*) disponíveis em um arquivo Excel:\n\n```{r}\nreadxl::excel_sheets(\"dados/sidrar_4092_bruto.xlsx\") # <1>\n```\n1. Consultando as planilhas disponíveis no arquivo Excel\n\nA função `read_excel()` do pacote `{readxl}` permite a leitura de uma planilha específica de um arquivo Excel, utilizando o argumento `sheet` para especificar o nome da planilha. Caso o argumento `sheet` não seja fornecido, a função importará a primeira planilha do arquivo.\n\n```{r}\ndados_excel <- readxl::read_excel(\"dados/sidrar_4092_bruto.xlsx\", sheet = \"Sheet1\") # <1> \n```\n1. Importando dados de uma planilha do Excel chamada \"Sheet1\"\n\n\n### Arquivo binário do R (`.rds`)\n\nA função `read_rds()` do pacote `{readr}` permite importar um arquivo binário do R. Um arquivo binário do R é um formato que preserva a integridade dos tipos de dados ao salvar e carregar objetos[^arquivos-binarios].\n\n[^arquivos-binarios]: O formato `.rds` não é o único formato de arquivo binário do R; outro exemplo é o `.Rdata`. Existem também formatos externos, como o `.parquet`, um formato eficiente para grandes volumes de dados e que podem ser lidos no R com o pacote `{arrow}`. Isso será abordado nos exemplos com o pacote `{censobr}`.\n\n\n```{r}\ndados <- read_rds(\"dados/sidrar_4092_bruto.rds\")\n```\n\n### Arquivos do Stata, SPSS, SAS\n\nPara importar arquivos do Stata, SPSS e SAS, podemos usar o pacote [`{haven}`](https://haven.tidyverse.org/). Esse pacote é instalado junto com o `{tidyverse}`.\n\nPor exemplo, função `read_dta()` do pacote `{haven}` permite a leitura de arquivos do Stata:\n\n```{r}\ndados_dta <- haven::read_dta(\"dados/sidrar_4092_bruto.dta\")\n```\n\n### Import Dataset do RStudio\n\nCaso você esteja com dificuldades, uma dica é usar a funcionalidade *Import Dataset* do RStudio. Essa funcionalidade permite utilizar uma interface *point-and-click* para importar dados, e apresenta o código utilizado para a importação. \n\n::: callout-tip\nO mais importante ao usar essa funcionalidade é **copiar e colar o código gerado no seu script**, para que você possa reutilizá-lo posteriormente.\n:::\n\n\nPara acessar a funcionalidade *Import Dataset*, clique em *Import Dataset* no canto superior direito do painel *Environment* do RStudio. Caso o arquivo seja um Excel, escolha a opção `From Excel`. Caso o arquivo seja um texto separado por algum delimitador (como CSV), escolha a opção `From Text (readr)`.\n\n![Captura de tela do console do RStudio, mostrando o menu onde podemos encontrar o Import Dataset](images/03_import_dataset.png){fig-align=\"center\"}\n\n## Salvando dados localmente\n\nPara salvar dados localmente, você pode usar funções com o prefixo `write_` de pacotes como `{readr}` e `{writexl}`. \nEssas funções solicitam dois argumentos principais: \n\n- Qual é o objeto que você queremos salvar? Esse objeto deve estar disponível no *Environment* do R. \n\n- Onde queremos salvar o arquivo? O caminho completo do arquivo deve ser fornecido entre aspas, contendo o diretório onde ele será salvo (em qual pasta do computador) e o nome do arquivo (com a extensão, por exemplo, `.csv`).\n\nAntes de salvar os dados, vamos criar um diretório onde salvaremos os arquivos. Você pode criar o diretório manualmente ou usar a função `fs::dir_create(\"nome_do_diretorio/\")` para criar o diretório.\n\n```{r}\n#| eval: false\nfs::dir_create(\"dados_output\")\n```\n\n::: callout-warning\nAtenção: O diretório (pasta no computador) onde o arquivo será salvo deve existir previamente, se não gerará um erro similar a este:\n\n```         \nError: Cannot open file for writing:\n* 'dados_output/sidrar_4092_salvo.csv'\n```\n:::\n\n### Arquivo de texto (ex: `.csv`)\n\nO pacote `{readr}` permite a escrita de arquivos de texto separados por algum delimitador, como `.csv`, `.tsv` e `.txt`.\n\nA função `write_csv2()` premite a escrita de arquivos `.csv` com separador `;`, que é o padrão no Brasil.\n\n```{r}\n#| eval: false\nwrite_csv2(dados, \"dados_output/sidrar_4092_bruto.csv\")\n```\n\n### Arquivo excel (ex: `.xlsx`)\n\nA função `write_xlsx()` do pacote `{writexl}` permite a escrita de arquivos do Excel.\n\n```{r}\n#| eval: false\nwritexl::write_xlsx(dados, \"dados_output/sidrar_4092_bruto.xlsx\")\n```\n\n### Arquivo binário do R (`.rds`)\n\nA função `write_rds()` do pacote `{readr}` permite salvar um objeto do R em um arquivo binário do R, preservando a estrutura dos objetos.\n\nExistem algumas vantagens em salvar arquivos no formato `.rds`:\n  - Podemos salvar qualquer tipo de objeto do R, como dataframes, listas, vetores, etc.\n\n  - Não perdemos a estrutura do objeto, como a classe, os tipos das colunas, nível de fatores, etc.\n  \n  - É um arquivo compacto (o arquivo salvo não é grande) e de rápida leitura no R (a importação não demora).\n  \n```{r}\nwrite_rds(dados, \"dados_output/sidrar_4092_bruto.rds\")\n```\n\n\n\n## Importando dados usando pacotes de dados\n\nExistem pacotes no R que permitem a importação de dados, como por exemplo: \n\n- [sidrar](https://cran.r-project.org/web/packages/sidrar/vignettes/Introduction_to_sidrar.html): Acesso aos dados disponíveis no SIDRA - Sistema IBGE de Recuperação Automática.\n- [censobr](https://ipeagit.github.io/censobr/): Dados de censos demográficos brasileiros.\n- [ipeadatar](https://cran.r-project.org/web/packages/ipeadatar/index.html): Acesso aos dados disponibilizados no [Ipeadata](http://www.ipeadata.gov.br/Default.aspx).\n- [flightsbr](https://github.com/ipeaGIT/flightsbr): Dados de vôos no Brasil.\n- [PNADcIBGE](https://cran.r-project.org/web/packages/PNADcIBGE/index.html): Dados da PNAD Contínua do IBGE.\n- [microdatasus](https://rfsaldanha.github.io/microdatasus/): Acesso aos microdados do DataSUS.\n\nA parte boa de usar esses pacotes é que eles já possuem funções prontas para importar os dados. \n\nA parte não-tão-boa é que os pacotes tem funções específicas para importar os dados, e você precisa aprender como usar essas funções. Recomendamos que você leia a documentação do pacote para entender como usar as funções de importação.\n\nAo longo deste curso, vamos aprender a usar alguns desses pacotes para importar dados específicos.\n\n::: callout-important\nEsses pacotes, em geral, obtém as informações na internet. Isso pode demorar um pouco.\n\nRecomendamos que você salve uma cópia local dos dados brutos após o download. Isso evita a necessidade de baixar os dados novamente e facilita o trabalho localmente, principalmente se a conexão com a internet estiver instável.\n\nAlguns pacotes, como o `{censobr}`, apresentam funções preparadas para salvar os dados localmente.\n:::\n\n### Pacote `{sidrar}`\n\nO pacote `{sidrar}` permite a importação de dados do Sistema IBGE de Recuperação Automática (SIDRA).\n\nPara importar dados do SIDRA, precisamos saber o **código da tabela** que desejamos importar. Uma forma de fazer isso é buscar no site do SIDRA, no IBGE: <https://sidra.ibge.gov.br/>.\n\n#### Buscando tabelas no SIDRA\n\nOutra forma é buscar por palavras-chave no próprio R, utilizando a função `search_sidra()`:\n\n```{r}\n# Exemplo de busca por palavras-chave: \n# Tabelas com resultados da PNAD Contínua Trimestral\nsidrar::search_sidra(\"PNADCT\") #<1>\n```\n1. Exemplo de busca por palavras-chave: tabelas com resultados da PNAD Contínua Trimestral\n\nNeste curso, utilizaremos na maioria das aulas a [Tabela 4092 - Pessoas de 14 anos ou mais de idade, por condição em relação à força de trabalho e condição e ocupação](https://sidra.ibge.gov.br/Tabela/4092), proveniente da Pesquisa Nacional por Amostra de Domicílios Contínua Trimestral (PNADC/T).\n\n#### Buscando informações sobre a tabela\n\nSabendo o código da tabela, você pode buscar informações sobre a tabela com a função `info_sidra()`. \n\n```{r}\ninfo_4092 <- sidrar::info_sidra(\"4092\")\n```\n\nO resultado dessa função é uma lista, portanto podemos acessar os elementos da lista utilizando o operador `$`, seguido pelo nome do elemento.\n\nPrimeiro, podemos ver os nomes dos elementos da lista:\n\n```{r}\nnames(info_4092)\n```\nAgora podemos consultar os elementos dessa lista!\n\n##### Nome da tabela\n\n```{r}\ninfo_4092$table\n```\n\n##### Períodos\n\nIsso será importante para a importação dos dados, pois podemos informar qual período queremos importar. \n\n```{r}\ninfo_4092$period\n```\nEsses dados estão salvos em um vetor de tamanho um, com textos separados por vírgula. Esse formato não é o ideal para usar na função de importação que veremos a seguir: o melhor é transformar em um vetor, onde cada elemento é um período.\n\nPodemos fazer isso com a função `str_split()`:\n\n```{r}\nperiodos_disponiveis <- stringr::str_split(info_4092$period, \", \")[[1]]\nperiodos_disponiveis\n```\n\nEsses são os períodos disponíveis para essa tabela no SIDRA.\n\n\n##### Variáveis\n\nIsso será importante para a importação dos dados, pois podemos informar quais variáveis queremos importar.\n\n```{r}\ninfo_4092$variable\n```\n\n##### Variáveis - Categorias\n\n```{r}\ninfo_4092$classific_category\n```\n\n##### Nível territorial\n\nIsso será importante para a importação dos dados, pois precisamos informar qual é o nível territorial a ser usado na importação.\n\n```{r}\ninfo_4092$geo\n```\n\n\n#### Importando a tabela\n\nA função `get_sidra()` do pacote `{sidrar}` permite importar dados do SIDRA.\n\n```{r}\n#| eval: false\ndados_brutos_4092 <- sidrar::get_sidra(\n  x = 4092,                      # <1>\n  period = c(\"201402\", \"201702\", \"202002\", \"202302\"), # <2>\n  geo = \"State\"                  # <3>\n)\n\n```\n1. Qual é o código da tabela que vamos usar?\n2. Períodos: trimestres, podemos indicar um vetor\n3. Nível territorial: Dados por UF\n\n\nLembrando que é importante salvar uma cópia local dos dados após o download. Assim, quando você for trabalhar com esses dados, não precisará baixá-los novamente.\n\n```{r}\n#| eval: false\nwrite_rds(dados_brutos_4092, \"dados_output/sidrar_4092_bruto.rds\") # <1>\n```\n1. Salvar o objeto `dados_brutos_4092` em um arquivo `.rds`, no arquivo `\"dados_output/sidrar_4092_bruto.rds\"`.\n\n## Sugestões de exercícios\n\n1. Faça a importação da base de dados `mananciais.csv`, disponível [neste link](https://github.com/beatrizmilz/mananciais/raw/master/inst/extdata/mananciais.csv). Dica: você pode utilizar a opção `Import Dataset > From Text (readr)` localizado no painel *Environment* do RStudio.\n\n2. Faça a importação da base `deputados.csv`, disponível [neste link](https://dadosabertos.camara.leg.br/arquivos/deputados/csv/deputados.csv). Dica: você pode utilizar a opção `Import Dataset > From Text (readr)` localizado no painel *Environment* do RStudio.\n\n3. Busque no [Portal de Dados Abertos da Câmara dos Deputados > Arquivos](https://dadosabertos.camara.leg.br/swagger/api.html?tab=staticfile#api) a tabela de proposições para o ano atual, e importe essa tabela no R.\n\n\n## Sugestões de materiais\n\n-   Livro [R para Ciência de Dados 2ed](https://cienciadedatos.github.io/pt-r4ds/):\n    -   [Importação de dados](https://cienciadedatos.github.io/pt-r4ds/data-import.html)\n-   Vídeo [Como organizar seu banco de dados para análises estatísticas](https://youtu.be/wzfPR2oQ61A?si=jU4YwAU_n-xQggsD), por Fernanda Peres (30 minutos).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":5,"output-file":"03_importacao.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.5.57","page-navigation":true,"page-footer":{"border":true,"left":"Copyright 2024, Beatriz Milz e IPEA/COCD","right":[{"icon":"github","href":"https://github.com/ipeadata-lab/curso_r_intro_202409s"}]},"bibliography":["references.bib"],"editor":"source","theme":"cosmo","title":"Importando dados","code-annotations":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}