{"title":"Conhecendo o R e o RStudio","markdown":{"yaml":{"title":"Conhecendo o R e o RStudio","code-annotations":"hover"},"headingText":"Linguagem R","containsRefs":false,"markdown":"\n\n::: callout\nPré-requisitos:\n\n- [Instalar o R](00_instrucoes_pre_curso.qmd)\n\n- [Instalar o RStudio](00_instrucoes_pre_curso.qmd)\n\n:::\n\n\nR é uma linguagem de programação com o foco em estatística, análise e visualização de dados. \n\nEla é uma linguagem de código aberto, o que significa que qualquer pessoa pode utilizá-la gratuitamente. Além disso, as pessoas com mais experiência na linguagem podem contribuir com o desenvolvimento de novas funcionalidades e pacotes.\n\nCaso queira saber mais sobre a linguagem R, [acesse o site oficial (R-Project)](https://www.r-project.org/about.html).\n\nAo instalar o R, você terá acesso a um programa chamado \"R Console\" que permite escrever e executar códigos em R:\n\n![Captura de tela do R Console no MacOS](images/01_R.png){fig-align=\"center\"}\n\n![Captura de tela do R Console no Windows](images/01_r_console_windows.jpg){fig-align=\"center\"}\n\n\nPorém o `R Console` não é muito amigável para escrever códigos complexos ou realizar análises de dados. Por isso, é recomendado utilizar um ambiente de desenvolvimento integrado (IDE). Existem várias IDEs que podemos utilizar com o R, como: RStudio, Visual Studio Code, Positron, entre outros. A IDE mais utilizada por pessoas que programam em R é o RStudio.\n\n\n\n## IDE RStudio Desktop\n\nO RStudio é um IDE focada em programação em R, e é desenvolvido pela [Posit](https://posit.co/). Ele facilita a escrita de códigos, execução de scripts, e visualização dos resultados.\n\nExistem algumas versões do RStudio. Neste curso, utilizaremos o [RStudio Desktop](https://posit.co/download/rstudio-desktop/), pois é a versão de código aberto (portanto é gratuita). Daqui em diante, sempre que mencionarmos \"RStudio\", estaremos nos referindo ao RStudio Desktop.\n\n::: callout-tip\nCaso o seu computador tenha limitações para instalação de programas, você pode utilizar o [Posit Cloud](https://posit.cloud/), uma versão online do RStudio. Entretanto, a versão gratuita do Posit Cloud tem algumas limitações, como limite de tempo de uso (25 horas por mês) e de memória RAM (1 GB).\n:::\n\nAo abrir o RStudio, veremos a seguinte tela:\n\n![Captura de tela do RStudio](images/01_rstudio_3_paineis.png){fig-align=\"center\"}\nAos poucos, conheceremos os painéis e funcionalidades do RStudio. Neste momento, podemos destacar os três painéis que são apresentados:\n\n- **Console**: painel onde os códigos são executados. É similar ao \"R Console\", citado anteriormente.\n\n- **Environment**: painel onde as variáveis e dados carregados ficam listados.\n\n- **Files**: painel onde podemos navegar por arquivos no computador. A página inicial é o diretório de trabalho: esse conceito será explicado mais adiante.\n\n## Scripts\n\nNo RStudio, podemos escrever e executar códigos no Console, porém os códigos são perdidos quando fechamos o programa. Para salvar os códigos e reutilizá-los posteriormente, utilizamos scripts.\n\nOs scripts são arquivos de texto onde podemos escrever códigos R e salvá-los para utilizar posteriormente. É recomendado que qualquer código que você deseje reutilizar ou que seja importante para a análise que você fizer seja salvo em um script.\n\nExistem algumas formas de criar um novo script:\n\n- No menu superior, clicando em `File > New File > R Script`.\n\n- Utilizando o atalho `Ctrl + Shift + N` (Windows) ou `Cmd + Shift + N` (Mac).\n\n- Clicando no ícone de um arquivo com um sinal de `+` no canto superior esquerdo do RStudio e selecionando `R Script`:\n\n\n![Captura de tela do RStudio: Opção para criar novo Script](images/01_rstudio_new_script.jpg){fig-align=\"center\"}\n\nApós abrir um script, o RStudio exibirá 4 paineis:\n\n![Captura de tela do RStudio](images/01_rstudio_4_paineis.png){fig-align=\"center\"}\n\n::: callout-tip\nO script é um arquivo salvo no nosso computador.\nLembre-se de salvar os scripts com frequência para evitar perder o nosso trabalho.\n\nPodemos salvar um script de algumas formas, como:\n\n- Clicando em `File > Save` no menu superior.\n\n- Clicando no ícone do disquete (![](images/01_disquete.png)).\n\n- Utilizando o atalho `Ctrl + S` (Windows) ou `Cmd + S` (Mac).\n:::\n\n### Como executar os códigos?\n\nPodemos escrever e executar códigos no Console ou em um script.\n\nNo Console, escrevemos o código diretamente e pressionamos `Enter` para executá-lo.\n\nEm um Script, escrevemos o código e podemos executá-lo de algumas formas:\n\n  - Selecionando o trecho de código que queremos executar e clicando no botão `Run` do RStudio, ou utilizando o atalho `Ctrl + Enter` (Windows) ou `Cmd + Enter` (Mac).\n  \n  - Clicando no trecho que queremos executar e clicando no botão `Run` do RStudio, ou utilizando o atalho `Ctrl + Enter` (Windows) ou `Cmd + Enter` (Mac).\n\n\n### Comentários\n\nComentários são textos que não são executados pelo R. Podemos usar comentários para explicar o que um bloco de código faz, para anotar ideias e explicar escolhas feitas, ou para desativar temporariamente um trecho de código.\n\nNo R, todo texto em uma linha após um hashtag (`#`) é um comentário. Por exemplo:\n\n```{r}\n# Este é um comentário\n```\n\n## Funções\n\nAgora que já sabemos onde escrever nossos códigos em R (no Console ou em um script), é importante entender o conceito de funções.\n\nUma função é tipo de objeto no R, que quando executado, executa um bloco de código específico. As funções são úteis para evitar repetição de códigos e organizar o nosso trabalho.\n\nNo R, existem muitas funções prontas que podemos utilizar. Por exemplo, a função `Sys.Date()` retorna a data atual do sistema:\n\n```{r}\nSys.Date()\n```\nPara utilizar uma função, escrevemos o nome dela seguido de parênteses. Dentro dos parênteses, podemos colocar dados e informações úteis para a função executar a tarefa desejada, e são chamados de **argumentos**.\n\nPor exemplo, a função `sqrt()` calcula a raiz quadrada de um número. Para utilizá-la, podemos escrever `mean()` e informar esse número entre parênteses:\n\n```{r}\nsqrt(25)\n```\n\n::: callout-tip\nAo adquirir experiência com o R, podemos criar nossas próprias funções. Isso é útil para automatizar tarefas repetitivas e para organizar o código.\n::: \n\n## Pacotes\n\nPacotes do R são coleções de funções, dados e documentação que estendem a funcionalidade básica da linguagem. \n\nO [CRAN (*Comprehensive R Archive Network*)](https://cran.r-project.org/) é o repositório oficial de pacotes do R. Ele contém milhares de pacotes que podem ser instalados e utilizados gratuitamente. Em setembro de 2024, o CRAN continha mais de 21.000 pacotes disponíveis.\n\nPara instalar um pacote, utilizamos a função `install.packages()` e informando o nome do pacote como texto entre aspas. Por exemplo, para instalar o pacote `{tidyverse}`, utilizamos o seguinte comando:\n\n```{r}\n#| eval: false\ninstall.packages(\"tidyverse\")  # <1>\n```\n1. Instala o pacote tidyverse\n\nApenas precisamos instalar um pacote uma vez. \n\nDepois de instalado, podemos carregá-lo com a função `library()`, para que as funções do pacote fiquem disponíveis para uso:\n\n```{r}\nlibrary(tidyverse)  # <1>\n```\n1. Carrega o pacote tidyverse\n\nPrecisamos carregar o pacote sempre que abrirmos um novo script, ou quando reiniciamos o RStudio. Uma pratica frequente é carregar os principais pacotes necessários no início do script.\n\n\n::: callout-caution\nUma outra forma de acessar uma função é utilizando o operador `::`. Por exemplo, para acessar a função `read_csv()` do pacote `{readr}`, podemos escrever `readr::read_csv()`.\n\nEssa sintaxe é menos frequente, porém útil para evitar problemas de conflito de funções com o mesmo nome em pacotes diferentes. Esse problema acontece mais frequentemente quando carregamos muitos pacotes em um mesmo script.\n\nPor exemplo: o pacote `{dplyr}` apresenta uma função `filter()`, e o pacote `{stats}` também apresenta uma função `filter()`. Se não usarmos o operador `::`, a função utilizada será a do pacote que foi carregado por último. Usando o operador `::`, podemos escolher qual função queremos utilizar.\n::: \n\n## Documentação\n\nAs funções e pacotes do R apresentam textos com explicações e exemplos de uso, chamados de **documentação**. \n\nAs documentações podem ser acessadas online, ou diretamente no RStudio.\n\n### Documentação no RStudio\n\nNo RStudio, podemos acessar a documentação de uma função ou pacote das seguintes formas:\n\n- Para buscar informações sobre funções de pacotes já carregados (com `library`), podemos utilizar a função `help()`, informando o nome da função que queremos buscar como argumento (ex: `help(mean)`), ou utilizar o operador `?`, seguido do nome da função (ex: `?mean`).\n\n```{r}\n#| eval: false\nhelp(mean)  # <1>\n?mean  # <1>\n```\n1. Abre a documentação da função mean()\n\n- Para fazer uma por funções presentes em todos os pacotes instalados no computador, podemos utilizar o operador `??`, seguido pelo termo que queremos buscar (ex: `??mean`). Essa é uma busca mais ampla, que procura pelo termo no nome e na descrição das funções.\n\n```{r}\n#| eval: false\n??mean  # <1>\n```\n1. Busca por funções que contenham o termo \"mean\"\n\n\n- Podemos utilizar o painel Help para buscar informações sobre funções e pacotes:\n\n![Captura de tela do RStudio: Painel Help](images/01_rstudio_help.png){fig-align=\"center\"}\n\nAlém disso, a maioria dos pacotes vem com textos explicativos sobre como usá-los, chamadas de *vignettes*. Elas estão disponíveis online, mas também podem ser acessadas diretamente no RStudio.\n\nPara acessar no RStudio, podemos usar a função `browseVignettes()` para listar as *vignettes* disponíveis para um pacote específico. A lista será apresentada em uma janela do navegador (ex: Google Chrome, Firefox, Safari, etc):\n\n```{r}\n#| eval: false\nbrowseVignettes(\"dplyr\")\n```\n\n![Captura de tela: Lista de Vignettes do pacote dplyr](images/01_vignettes.png){fig-align=\"center\"}\n\n### Documentação online\n\nComo citado anteriormente, é possível acessar a documentação dos pacotes diretamente no RStudio e também online. No geral, o conteúdo disponível online é igual ao disponível no RStudio, mas pode ser mais fácil de buscar e navegar. \n\nUma forma de acessar a documentação online é fazendo uma busca no Google com os termos \"`R documentation {nome da função}`\". Por exemplo: \"`R documentation mean()`\".\n\n\nAlguns pacotes apresentam também sites próprios com documentações e *vignettes*.\n\nPor exemplo, o pacote `{dplyr}` (que usaremos no curso) tem um [site próprio](https://dplyr.tidyverse.org/index.html) onde conseguimos acessar a documentação. Os pacotes do tidyverse apresentam sites similares, com páginas com os seguintes conteúdos:\n\n- Em *[Get started](https://dplyr.tidyverse.org/articles/dplyr.html)* encontramos uma introdução ao pacote, e exemplos de uso para quem quer aprender a usá-lo.\n\n- Em *[Reference](https://dplyr.tidyverse.org/reference/index.html)*, encontramos a lista de funções disponíveis no pacote, e podemos acessar a documentação de cada uma delas:\n\n![Captura de tela: Site do pacote dplyr - Reference](images/01_reference_dplyr.png){fig-align=\"center\"}\n\n\n- Em *[Articles](https://dplyr.tidyverse.org/articles/index.html)* podemos acessar as *vignettes*:\n\n![Captura de tela: Site do pacote dplyr - Vignettes](images/01_vignettes_dplyr.png){fig-align=\"center\"}\n\n### Cheatsheets\n\nAs *cheatsheets* (ou folhas de cola) são documentos resumidos com informações sobre funções e pacotes. Elas são úteis para consulta rápida.\n\nA Posit (empresa que desenvolve o RStudio) disponibiliza *cheatsheets* para diversos pacotes e tópicos. Elas podem ser acessadas no site [Posit Cheatsheets](https://posit.co/resources/cheatsheets/).\n\nA lista a seguir apresenta algumas *cheatsheets* sobre temas que serão abordados ao longo do curso:\n\n- [RStudio IDE](https://github.com/rstudio/cheatsheets/blob/main/rstudio-ide.pdf)\n\n- [Importação de dados com o tidyverse](https://github.com/rstudio/cheatsheets/blob/main/data-import.pdf)\n\n- [Transformação de dados com dplyr](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf)\n\n- [Visualização de dados com ggplot2](https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf)\n\n- [Arrumando dados com tidyr](https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf)\n\n- [Arrow](https://github.com/rstudio/cheatsheets/blob/main/arrow.pdf)\n\n\n## Instalação de pacotes necessários no curso\n\nDurante o curso, utilizaremos diversos pacotes do R.\n\nVamos instalar os pacotes ao longo das aulas. Neste momento, vamos instalar os pacotes que utilizaremos nas primeiras aulas do curso. Copie o código abaixo no console, e execute-o para instalar os pacotes necessários:\n\n```{r}\n#| eval: false\npacotes_necessarios <- c( # <1>\n  \"tidyverse\",\n  \"janitor\",\n  \"sidrar\",\n  \"readxl\",\n  \"writexl\",\n  \"fs\",\n  \"naniar\",\n  \"skimr\",\n  \"esquisse\",\n  \"geobr\",\n  \"sf\",\n  \"ipeaplot\",\n  \"ggthemes\",\n  \"censobr\",\n  \"arrow\",\n  \"knitr\",\n  \"abjData\",\n  \"DT\",\n  \"broom\",\n  \"report\",\n  \"car\",\n  \"stargazer\"\n)  # <1>\n\ninstall.packages(pacotes_necessarios)  # <2>\n```\n1. Criando um conjunto com o nome dos pacotes necessários\n2. Instalando os pacotes necessários\n\n## Sugestões de materiais\n\n- Livro [R para Ciência de Dados 2ed](https://cienciadedatos.github.io/pt-r4ds/):\n  - [Introdução > Pré-requisitos em diante](https://cienciadedatos.github.io/pt-r4ds/intro.html#pr%C3%A9-requisitos)\n  - [Fluxo de Trabalho: obtendo ajuda](https://cienciadedatos.github.io/pt-r4ds/workflow-help.html)\n","srcMarkdownNoYaml":"\n\n::: callout\nPré-requisitos:\n\n- [Instalar o R](00_instrucoes_pre_curso.qmd)\n\n- [Instalar o RStudio](00_instrucoes_pre_curso.qmd)\n\n:::\n\n## Linguagem R\n\nR é uma linguagem de programação com o foco em estatística, análise e visualização de dados. \n\nEla é uma linguagem de código aberto, o que significa que qualquer pessoa pode utilizá-la gratuitamente. Além disso, as pessoas com mais experiência na linguagem podem contribuir com o desenvolvimento de novas funcionalidades e pacotes.\n\nCaso queira saber mais sobre a linguagem R, [acesse o site oficial (R-Project)](https://www.r-project.org/about.html).\n\nAo instalar o R, você terá acesso a um programa chamado \"R Console\" que permite escrever e executar códigos em R:\n\n![Captura de tela do R Console no MacOS](images/01_R.png){fig-align=\"center\"}\n\n![Captura de tela do R Console no Windows](images/01_r_console_windows.jpg){fig-align=\"center\"}\n\n\nPorém o `R Console` não é muito amigável para escrever códigos complexos ou realizar análises de dados. Por isso, é recomendado utilizar um ambiente de desenvolvimento integrado (IDE). Existem várias IDEs que podemos utilizar com o R, como: RStudio, Visual Studio Code, Positron, entre outros. A IDE mais utilizada por pessoas que programam em R é o RStudio.\n\n\n\n## IDE RStudio Desktop\n\nO RStudio é um IDE focada em programação em R, e é desenvolvido pela [Posit](https://posit.co/). Ele facilita a escrita de códigos, execução de scripts, e visualização dos resultados.\n\nExistem algumas versões do RStudio. Neste curso, utilizaremos o [RStudio Desktop](https://posit.co/download/rstudio-desktop/), pois é a versão de código aberto (portanto é gratuita). Daqui em diante, sempre que mencionarmos \"RStudio\", estaremos nos referindo ao RStudio Desktop.\n\n::: callout-tip\nCaso o seu computador tenha limitações para instalação de programas, você pode utilizar o [Posit Cloud](https://posit.cloud/), uma versão online do RStudio. Entretanto, a versão gratuita do Posit Cloud tem algumas limitações, como limite de tempo de uso (25 horas por mês) e de memória RAM (1 GB).\n:::\n\nAo abrir o RStudio, veremos a seguinte tela:\n\n![Captura de tela do RStudio](images/01_rstudio_3_paineis.png){fig-align=\"center\"}\nAos poucos, conheceremos os painéis e funcionalidades do RStudio. Neste momento, podemos destacar os três painéis que são apresentados:\n\n- **Console**: painel onde os códigos são executados. É similar ao \"R Console\", citado anteriormente.\n\n- **Environment**: painel onde as variáveis e dados carregados ficam listados.\n\n- **Files**: painel onde podemos navegar por arquivos no computador. A página inicial é o diretório de trabalho: esse conceito será explicado mais adiante.\n\n## Scripts\n\nNo RStudio, podemos escrever e executar códigos no Console, porém os códigos são perdidos quando fechamos o programa. Para salvar os códigos e reutilizá-los posteriormente, utilizamos scripts.\n\nOs scripts são arquivos de texto onde podemos escrever códigos R e salvá-los para utilizar posteriormente. É recomendado que qualquer código que você deseje reutilizar ou que seja importante para a análise que você fizer seja salvo em um script.\n\nExistem algumas formas de criar um novo script:\n\n- No menu superior, clicando em `File > New File > R Script`.\n\n- Utilizando o atalho `Ctrl + Shift + N` (Windows) ou `Cmd + Shift + N` (Mac).\n\n- Clicando no ícone de um arquivo com um sinal de `+` no canto superior esquerdo do RStudio e selecionando `R Script`:\n\n\n![Captura de tela do RStudio: Opção para criar novo Script](images/01_rstudio_new_script.jpg){fig-align=\"center\"}\n\nApós abrir um script, o RStudio exibirá 4 paineis:\n\n![Captura de tela do RStudio](images/01_rstudio_4_paineis.png){fig-align=\"center\"}\n\n::: callout-tip\nO script é um arquivo salvo no nosso computador.\nLembre-se de salvar os scripts com frequência para evitar perder o nosso trabalho.\n\nPodemos salvar um script de algumas formas, como:\n\n- Clicando em `File > Save` no menu superior.\n\n- Clicando no ícone do disquete (![](images/01_disquete.png)).\n\n- Utilizando o atalho `Ctrl + S` (Windows) ou `Cmd + S` (Mac).\n:::\n\n### Como executar os códigos?\n\nPodemos escrever e executar códigos no Console ou em um script.\n\nNo Console, escrevemos o código diretamente e pressionamos `Enter` para executá-lo.\n\nEm um Script, escrevemos o código e podemos executá-lo de algumas formas:\n\n  - Selecionando o trecho de código que queremos executar e clicando no botão `Run` do RStudio, ou utilizando o atalho `Ctrl + Enter` (Windows) ou `Cmd + Enter` (Mac).\n  \n  - Clicando no trecho que queremos executar e clicando no botão `Run` do RStudio, ou utilizando o atalho `Ctrl + Enter` (Windows) ou `Cmd + Enter` (Mac).\n\n\n### Comentários\n\nComentários são textos que não são executados pelo R. Podemos usar comentários para explicar o que um bloco de código faz, para anotar ideias e explicar escolhas feitas, ou para desativar temporariamente um trecho de código.\n\nNo R, todo texto em uma linha após um hashtag (`#`) é um comentário. Por exemplo:\n\n```{r}\n# Este é um comentário\n```\n\n## Funções\n\nAgora que já sabemos onde escrever nossos códigos em R (no Console ou em um script), é importante entender o conceito de funções.\n\nUma função é tipo de objeto no R, que quando executado, executa um bloco de código específico. As funções são úteis para evitar repetição de códigos e organizar o nosso trabalho.\n\nNo R, existem muitas funções prontas que podemos utilizar. Por exemplo, a função `Sys.Date()` retorna a data atual do sistema:\n\n```{r}\nSys.Date()\n```\nPara utilizar uma função, escrevemos o nome dela seguido de parênteses. Dentro dos parênteses, podemos colocar dados e informações úteis para a função executar a tarefa desejada, e são chamados de **argumentos**.\n\nPor exemplo, a função `sqrt()` calcula a raiz quadrada de um número. Para utilizá-la, podemos escrever `mean()` e informar esse número entre parênteses:\n\n```{r}\nsqrt(25)\n```\n\n::: callout-tip\nAo adquirir experiência com o R, podemos criar nossas próprias funções. Isso é útil para automatizar tarefas repetitivas e para organizar o código.\n::: \n\n## Pacotes\n\nPacotes do R são coleções de funções, dados e documentação que estendem a funcionalidade básica da linguagem. \n\nO [CRAN (*Comprehensive R Archive Network*)](https://cran.r-project.org/) é o repositório oficial de pacotes do R. Ele contém milhares de pacotes que podem ser instalados e utilizados gratuitamente. Em setembro de 2024, o CRAN continha mais de 21.000 pacotes disponíveis.\n\nPara instalar um pacote, utilizamos a função `install.packages()` e informando o nome do pacote como texto entre aspas. Por exemplo, para instalar o pacote `{tidyverse}`, utilizamos o seguinte comando:\n\n```{r}\n#| eval: false\ninstall.packages(\"tidyverse\")  # <1>\n```\n1. Instala o pacote tidyverse\n\nApenas precisamos instalar um pacote uma vez. \n\nDepois de instalado, podemos carregá-lo com a função `library()`, para que as funções do pacote fiquem disponíveis para uso:\n\n```{r}\nlibrary(tidyverse)  # <1>\n```\n1. Carrega o pacote tidyverse\n\nPrecisamos carregar o pacote sempre que abrirmos um novo script, ou quando reiniciamos o RStudio. Uma pratica frequente é carregar os principais pacotes necessários no início do script.\n\n\n::: callout-caution\nUma outra forma de acessar uma função é utilizando o operador `::`. Por exemplo, para acessar a função `read_csv()` do pacote `{readr}`, podemos escrever `readr::read_csv()`.\n\nEssa sintaxe é menos frequente, porém útil para evitar problemas de conflito de funções com o mesmo nome em pacotes diferentes. Esse problema acontece mais frequentemente quando carregamos muitos pacotes em um mesmo script.\n\nPor exemplo: o pacote `{dplyr}` apresenta uma função `filter()`, e o pacote `{stats}` também apresenta uma função `filter()`. Se não usarmos o operador `::`, a função utilizada será a do pacote que foi carregado por último. Usando o operador `::`, podemos escolher qual função queremos utilizar.\n::: \n\n## Documentação\n\nAs funções e pacotes do R apresentam textos com explicações e exemplos de uso, chamados de **documentação**. \n\nAs documentações podem ser acessadas online, ou diretamente no RStudio.\n\n### Documentação no RStudio\n\nNo RStudio, podemos acessar a documentação de uma função ou pacote das seguintes formas:\n\n- Para buscar informações sobre funções de pacotes já carregados (com `library`), podemos utilizar a função `help()`, informando o nome da função que queremos buscar como argumento (ex: `help(mean)`), ou utilizar o operador `?`, seguido do nome da função (ex: `?mean`).\n\n```{r}\n#| eval: false\nhelp(mean)  # <1>\n?mean  # <1>\n```\n1. Abre a documentação da função mean()\n\n- Para fazer uma por funções presentes em todos os pacotes instalados no computador, podemos utilizar o operador `??`, seguido pelo termo que queremos buscar (ex: `??mean`). Essa é uma busca mais ampla, que procura pelo termo no nome e na descrição das funções.\n\n```{r}\n#| eval: false\n??mean  # <1>\n```\n1. Busca por funções que contenham o termo \"mean\"\n\n\n- Podemos utilizar o painel Help para buscar informações sobre funções e pacotes:\n\n![Captura de tela do RStudio: Painel Help](images/01_rstudio_help.png){fig-align=\"center\"}\n\nAlém disso, a maioria dos pacotes vem com textos explicativos sobre como usá-los, chamadas de *vignettes*. Elas estão disponíveis online, mas também podem ser acessadas diretamente no RStudio.\n\nPara acessar no RStudio, podemos usar a função `browseVignettes()` para listar as *vignettes* disponíveis para um pacote específico. A lista será apresentada em uma janela do navegador (ex: Google Chrome, Firefox, Safari, etc):\n\n```{r}\n#| eval: false\nbrowseVignettes(\"dplyr\")\n```\n\n![Captura de tela: Lista de Vignettes do pacote dplyr](images/01_vignettes.png){fig-align=\"center\"}\n\n### Documentação online\n\nComo citado anteriormente, é possível acessar a documentação dos pacotes diretamente no RStudio e também online. No geral, o conteúdo disponível online é igual ao disponível no RStudio, mas pode ser mais fácil de buscar e navegar. \n\nUma forma de acessar a documentação online é fazendo uma busca no Google com os termos \"`R documentation {nome da função}`\". Por exemplo: \"`R documentation mean()`\".\n\n\nAlguns pacotes apresentam também sites próprios com documentações e *vignettes*.\n\nPor exemplo, o pacote `{dplyr}` (que usaremos no curso) tem um [site próprio](https://dplyr.tidyverse.org/index.html) onde conseguimos acessar a documentação. Os pacotes do tidyverse apresentam sites similares, com páginas com os seguintes conteúdos:\n\n- Em *[Get started](https://dplyr.tidyverse.org/articles/dplyr.html)* encontramos uma introdução ao pacote, e exemplos de uso para quem quer aprender a usá-lo.\n\n- Em *[Reference](https://dplyr.tidyverse.org/reference/index.html)*, encontramos a lista de funções disponíveis no pacote, e podemos acessar a documentação de cada uma delas:\n\n![Captura de tela: Site do pacote dplyr - Reference](images/01_reference_dplyr.png){fig-align=\"center\"}\n\n\n- Em *[Articles](https://dplyr.tidyverse.org/articles/index.html)* podemos acessar as *vignettes*:\n\n![Captura de tela: Site do pacote dplyr - Vignettes](images/01_vignettes_dplyr.png){fig-align=\"center\"}\n\n### Cheatsheets\n\nAs *cheatsheets* (ou folhas de cola) são documentos resumidos com informações sobre funções e pacotes. Elas são úteis para consulta rápida.\n\nA Posit (empresa que desenvolve o RStudio) disponibiliza *cheatsheets* para diversos pacotes e tópicos. Elas podem ser acessadas no site [Posit Cheatsheets](https://posit.co/resources/cheatsheets/).\n\nA lista a seguir apresenta algumas *cheatsheets* sobre temas que serão abordados ao longo do curso:\n\n- [RStudio IDE](https://github.com/rstudio/cheatsheets/blob/main/rstudio-ide.pdf)\n\n- [Importação de dados com o tidyverse](https://github.com/rstudio/cheatsheets/blob/main/data-import.pdf)\n\n- [Transformação de dados com dplyr](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf)\n\n- [Visualização de dados com ggplot2](https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf)\n\n- [Arrumando dados com tidyr](https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf)\n\n- [Arrow](https://github.com/rstudio/cheatsheets/blob/main/arrow.pdf)\n\n\n## Instalação de pacotes necessários no curso\n\nDurante o curso, utilizaremos diversos pacotes do R.\n\nVamos instalar os pacotes ao longo das aulas. Neste momento, vamos instalar os pacotes que utilizaremos nas primeiras aulas do curso. Copie o código abaixo no console, e execute-o para instalar os pacotes necessários:\n\n```{r}\n#| eval: false\npacotes_necessarios <- c( # <1>\n  \"tidyverse\",\n  \"janitor\",\n  \"sidrar\",\n  \"readxl\",\n  \"writexl\",\n  \"fs\",\n  \"naniar\",\n  \"skimr\",\n  \"esquisse\",\n  \"geobr\",\n  \"sf\",\n  \"ipeaplot\",\n  \"ggthemes\",\n  \"censobr\",\n  \"arrow\",\n  \"knitr\",\n  \"abjData\",\n  \"DT\",\n  \"broom\",\n  \"report\",\n  \"car\",\n  \"stargazer\"\n)  # <1>\n\ninstall.packages(pacotes_necessarios)  # <2>\n```\n1. Criando um conjunto com o nome dos pacotes necessários\n2. Instalando os pacotes necessários\n\n## Sugestões de materiais\n\n- Livro [R para Ciência de Dados 2ed](https://cienciadedatos.github.io/pt-r4ds/):\n  - [Introdução > Pré-requisitos em diante](https://cienciadedatos.github.io/pt-r4ds/intro.html#pr%C3%A9-requisitos)\n  - [Fluxo de Trabalho: obtendo ajuda](https://cienciadedatos.github.io/pt-r4ds/workflow-help.html)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":5,"output-file":"01_r_rstudio.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.5.57","page-navigation":true,"page-footer":{"border":true,"left":"Copyright 2024, Beatriz Milz e IPEA/COCD","right":[{"icon":"github","href":"https://github.com/ipeadata-lab/curso_r_intro_202409s"}]},"bibliography":["references.bib"],"editor":"source","theme":"cosmo","title":"Conhecendo o R e o RStudio","code-annotations":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}