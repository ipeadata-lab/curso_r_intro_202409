---
# Iniciar um trabalho com o R e o Rstudio
title: "Conhecendo o R e o RStudio"
---

:::callout-warning
Página em construção! Em breve. 
:::

## Apresentação 

### Software e linguagem R

R é uma linguagem de programação amplamente utilizada para estatística, análise de dados e visualizações. Ela foi desenvolvida para facilitar a análise de dados estatísticos, mas se expandiu para se tornar uma das principais ferramentas de ciência de dados.


Ela é extremamente poderosa para realizar análises complexas de forma eficiente. Ao longo do curso, exploraremos as funcionalidades do R, suas bibliotecas e ferramentas que tornam o trabalho com dados mais acessível.


### RStudio

Já o RStudio é um ambiente de desenvolvimento integrado (IDE) para R. Ele facilita a escrita de códigos, execução de scripts, e visualização dos resultados. A interface amigável do RStudio ajuda no gerenciamento de projetos e na execução de tarefas repetitivas com mais eficiência.

- Principais componentes da interface do RStudio:  Ao abrir o RStudio, você verá uma janela dividida em quatro áreas principais:
  
  - Console: onde os códigos são executados.
  
  - Editor de Scripts: onde você pode escrever e salvar seus códigos.
  
  - Ambiente: onde as variáveis e dados carregados ficam visíveis.
  
  - Painel de Arquivos e Gráficos: onde arquivos, pacotes instalados e gráficos são exibidos.

## Working directory e Rproject

No R, o working directory é o diretório em que os arquivos serão salvos e lidos. 

Mas o uso de Rprojects é ainda mais eficiente. Sempre que criar um novo projeto no RStudio, ele criará um arquivo .Rproj na pasta do projeto e definirá o diretório automaticamente.

## Scripts

Os scripts são arquivos de texto onde você pode escrever códigos R e salvá-los para reutilização posterior. Eles permitem organizar e documentar suas análises, além de facilitar a reprodução do trabalho.

### Funções

Funções são blocos de código que executam tarefas específicas. No R, existem muitas funções prontas, mas você também pode criar suas próprias funções. Isso é útil para evitar repetir códigos. Exemplo de uma função simples:

```{r}
# Função para calcular o quadrado de um número
quadrado <- function(x) {
  x^2
}

quadrado(4)  # Retorna 16
```

## Pacotes

### O que são pacotes?

Pacotes no R são coleções de funções, dados e documentação que estendem a funcionalidade básica da linguagem. O R possui uma vasta gama de pacotes, cada um com um propósito específico, como manipulação de dados, visualização ou modelagem estatística.

### Instalação de pacotes

Para utilizar um pacote no R, primeiro precisamos instalá-lo e, em seguida, carregá-lo no ambiente de trabalho. A instalação pode ser feita com a função install.packages(). Por exemplo:

```{r}
#| eval: false
install.packages("tidyverse")  # Instala o pacote tidyverse
```





### Instalação de pacotes necessários no curso

Durante o curso, utilizaremos diversos pacotes do R.
Explicaremos o que são pacotes em ["Conhecendo o R e o RStudio > Pacotes"](01_r_rstudio.qmd), mas, de forma resumida, são extensões que adicionam funcionalidades ao R.

Para instalar os pacotes necessários, execute o seguinte comando no console do RStudio:

```{r}
#| eval: false
pacotes_necessarios <- c("tidyverse", "janitor", "sidrar", "sf", "geobr",
                         "readxl", "writexl", "fs", "naniar", "skimr")

install.packages(pacotes_necessarios)
```

### Carregamento de pacotes

Depois de instalar, lembre-se de carregar os pacotes com a função library(). Se os pacotes não forem carregados, as funções associadas a eles não estarão disponíveis:

Depois de instalado, o pacote deve ser carregado com library():

```{r}
library(tidyverse)  # Carrega o pacote tidyverse
```

## Help, manuais e documentação

O R oferece um sistema robusto de ajuda que pode ser acessado diretamente do console. Use `?` seguido do nome da função para acessar sua documentação:

```{r}
#| eval: false
?mean  # Abre a documentação da função mean
```


Além disso, a maioria dos pacotes vem com vignettes (tutoriais) que explicam como usá-los. Use `browseVignettes()` para visualizar os tutoriais disponíveis para um pacote específico:

```{r}
#| eval: false
browseVignettes("dplyr")  # Abre os tutoriais do pacote dplyr
```

O acesso à documentação e tutoriais é essencial para aprender novas funções e compreender como elas funcionam.

## Sugestões de materiais

- Livro [R para Ciência de Dados 2ed](https://cienciadedatos.github.io/pt-r4ds/):
  - [Fluxo de Trabalho: básico](https://cienciadedatos.github.io/pt-r4ds/workflow-basics.html)
  - [Fluxo de Trabalho: scripts](https://cienciadedatos.github.io/pt-r4ds/workflow-scripts.html)
  - [Fluxo de Trabalho: obtendo ajuda](https://cienciadedatos.github.io/pt-r4ds/workflow-help.html)
